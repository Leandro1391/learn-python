{
    "Show print": {
        "prefix": "pt",
        "body": [
            "print($1)",
            "$2"
        ],
        "description": "Show print in console...."
    },
    "Cycle while": {
        "prefix": "wh",
        "body": [
            "while ${1:condition}:",
            "\t${2:pass}"
        ],
        "description": "While cycle basic format snippet"
    },
    "Generate method": {
        "prefix": "met",
        "body": [
            "def ${1:methodName}(${2:arg}):",
            "\t${3:pass}"
        ],
        "description": "Create a basic method"
    },
    "Generate import": {
        "prefix": "imp",
        "body": [
            "from $1 import $1"
        ],
        "description": "Autocomplete Import Module"
    },
    "Generate Try Exception": {
        "prefix": "trycatch",
        "body": [
            "try:",
            "\t${1:logical code handle exception ...}",
            "except Exception as e:",
            "\tprint(f'Exception - Error handled: {e}, {type(e)}')"
        ],
        "description": "Autocomplete Import Module"
    },
    "Create class": {
        "prefix": "clase",
        "body": [
            "class ${1:NameClass}:",
            "",
            "\tdef __init__(self, $2: ${3:type}):",
            "\t\tself._$2 = $2",
            "",
            "\t@property",
            "\tdef $2(self):",
            "\t\treturn self._$2",
            "",
            "\t@$2.setter",
            "\tdef $2(self, $2):",
            "\t\tself._$2 = $2",
            "",
            "\tdef __str__(self) -> str:",
            "\t\treturn f'$1: [$2 {self._$2}]'"
        ],
        "description": "Autocomplete a class with one atribute"
    },
    "Create class with two attributes": {
        "prefix": "clase2",
        "body": [
            "class ${1:NameClass}:",
            "",
            "\tdef __init__(self, $2, $3):",
            "\t\tself._$2 = $2",
            "\t\tself._$3 = $3",
            "",
            "\t@property",
            "\tdef $2(self):",
            "\t\treturn self._$2",
            "",
            "\t@$2.setter",
            "\tdef $2(self, $2):",
            "\t\tself._$2 = $2",
            "",
            "\t@property",
            "\tdef $3(self):",
            "\t\treturn self._$3",
            "",
            "\t@$3.setter",
            "\tdef $3(self, $3):",
            "\t\tself._$3 = $3",
            "",
            "\tdef __str__(self) -> str:",
            "\t\treturn f'$1: [$2 {self._$2}, $3 {self._$3}]'"
        ],
        "description": "Autocomplete a class with two atributes and with your properties"
    },
    "Create class with three attributes": {
        "prefix": "clase3",
        "body": [
            "class ${1:NameClass}:",
            "",
            "\tdef __init__(self, $2, $3, $4):",
            "\t\tself._$2 = $2",
            "\t\tself._$3 = $3",
            "\t\tself._$4 = $4",
            "",
            "\t@property",
            "\tdef $2(self):",
            "\t\treturn self._$2",
            "",
            "\t@$2.setter",
            "\tdef $2(self, $2):",
            "\t\tself._$2 = $2",
            "",
            "\t@property",
            "\tdef $3(self):",
            "\t\treturn self._$3",
            "",
            "\t@$3.setter",
            "\tdef $3(self, $3):",
            "\t\tself._$3 = $3",
            "",
            "\t@property",
            "\tdef $4(self):",
            "\t\treturn self._$4",
            "",
            "\t@$4.setter",
            "\tdef $4(self, $4):",
            "\t\tself._$4 = $4",
            "",
            "\tdef __str__(self) -> str:",
            "\t\treturn f'$1: [$2 {self._$2}, $3 {self._$3}, $4 {self._$4}]'"
        ],
        "description": "Autocomplete a class with three atributes and with your properties"
    },
    "Create class with four attributes": {
        "prefix": "clase4",
        "body": [
            "class ${1:NameClass}:",
            "",
            "\tdef __init__(self, $2, $3, $4, $5):",
            "\t\tself._$2 = $2",
            "\t\tself._$3 = $3",
            "\t\tself._$4 = $4",
            "\t\tself._$5 = $5",
            "",
            "\t@property",
            "\tdef $2(self):",
            "\t\treturn self._$2",
            "",
            "\t@$2.setter",
            "\tdef $2(self, $2):",
            "\t\tself._$2 = $2",
            "",
            "\t@property",
            "\tdef $3(self):",
            "\t\treturn self._$3",
            "",
            "\t@$3.setter",
            "\tdef $3(self, $3):",
            "\t\tself._$3 = $3",
            "",
            "\t@property",
            "\tdef $4(self):",
            "\t\treturn self._$4",
            "",
            "\t@$4.setter",
            "\tdef $4(self, $4):",
            "\t\tself._$4 = $4",
            "",
            "\t@property",
            "\tdef $5(self):",
            "\t\treturn self._$5",
            "",
            "\t@$5.setter",
            "\tdef $5(self, $5):",
            "\t\tself._$5 = $5",
            "",
            "\tdef __str__(self) -> str:",
            "\t\treturn f'$1: [$2 {self._$2}, $3 {self._$3}, $4 {self._$4}, $5 {self._$5}]'"
        ],
        "description": "Autocomplete a class with four atributes and with your properties"
    },
    "Create class with five attributes": {
        "prefix": "clase5",
        "body": [
            "class ${1:NameClass}:",
            "",
            "\tdef __init__(self, $2, $3, $4, $5, $6):",
            "\t\tself._$2 = $2",
            "\t\tself._$3 = $3",
            "\t\tself._$4 = $4",
            "\t\tself._$5 = $5",
            "\t\tself._$6 = $6",
            "",
            "\t@property",
            "\tdef $2(self):",
            "\t\treturn self._$2",
            "",
            "\t@$2.setter",
            "\tdef $2(self, $2):",
            "\t\tself._$2 = $2",
            "",
            "\t@property",
            "\tdef $3(self):",
            "\t\treturn self._$3",
            "",
            "\t@$3.setter",
            "\tdef $3(self, $3):",
            "\t\tself._$3 = $3",
            "",
            "\t@property",
            "\tdef $4(self):",
            "\t\treturn self._$4",
            "",
            "\t@$4.setter",
            "\tdef $4(self, $4):",
            "\t\tself._$4 = $4",
            "",
            "\t@property",
            "\tdef $5(self):",
            "\t\treturn self._$5",
            "",
            "\t@$5.setter",
            "\tdef $5(self, $5):",
            "\t\tself._$5 = $5",
            "",
            "\t@property",
            "\tdef $6(self):",
            "\t\treturn self._$6",
            "",
            "\t@$6.setter",
            "\tdef $6(self, $6):",
            "\t\tself._$6 = $6",
            "",
            "\tdef __str__(self) -> str:",
            "\t\treturn f'$1: [$2 {self._$2}, $3 {self._$3}, $4 {self._$4}, $5 {self._$5}, $6 {self._$6}]'"
        ],
        "description": "Autocomplete a class with five atributes and with your properties"
    },
    "Create class child with one attribute and one atribute parent class": {
        "prefix": "claseh",
        "body": [
            "from $2 import $2",
            "",
            "class ${1:NameClass}($2):",
            "",
            "\tdef __init__(self, $3, $4):",
            "\t\tsuper().__init__($3)",
            "\t\tself._$4 = $4",
            "",
            "\t@property",
            "\tdef $4(self):",
            "\t\treturn self._$4",
            "",
            "\t@$4.setter",
            "\tdef $4(self, $4):",
            "\t\tself._$4 = $4",
            "",
            "\tdef __str__(self) -> str:",
            "\t\treturn f'$1: [$3 {self._$3}] {super().__str()__}'"
        ],
        "description": "Autocomplete a class with two atributes parent and one atribute child and with your properties"
    },
    "Create class child with one attribute and two atributes parent class": {
        "prefix": "clase2h1",
        "body": [
            "from $2 import $2",
            "",
            "class ${1:NameClass}($2):",
            "",
            "\tdef __init__(self, $3, $4, $5):",
            "\t\tsuper().__init__($3, $4)",
            "\t\tself._$5 = $5",
            "",
            "\t@property",
            "\tdef $5(self):",
            "\t\treturn self._$5",
            "",
            "\t@$5.setter",
            "\tdef $5(self, $5):",
            "\t\tself._$5 = $5",
            "",
            "\tdef __str__(self) -> str:",
            "\t\treturn f'$1: [$5 {self._$5}] {super().__str()__}'"
        ],
        "description": "Autocomplete a class with two atributes parent and one atribute child and with your properties"
    },
    "Create class child with two attribute and two parent atributes class": {
        "prefix": "clase2h2",
        "body": [
            "class ${1:NameClass}:",
            "",
            "\tdef __init__(self, $2, $3, $4, $5):",
            "\t\tsuper().__init__($2, $3)",
            "\t\tself._$4 = $4",
            "\t\tself._$5 = $5",
            "",
            "\t@property",
            "\tdef $4(self):",
            "\t\treturn self._$4",
            "",
            "\t@$4.setter",
            "\tdef $4(self, $4):",
            "\t\tself._$4 = $4",
            "",
            "\t@property",
            "\tdef $5(self):",
            "\t\treturn self._$5",
            "",
            "\t@$5.setter",
            "\tdef $5(self, $5):",
            "\t\tself._$5 = $5",
            "",
            "\tdef __str__(self) -> str:",
            "\t\treturn f'$1: [$4 {self._$4}, $5 {self._$5}] {super().__str()__}'"
        ],
        "description": "Autocomplete a class with two atributes parent and one atribute child and with your properties"
    },
}